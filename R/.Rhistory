knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
rm(list=ls())
#install packages
#only run once
#install.packages("tidyverse")
#install.packages("dplyr")
#install.packages("gt")
#install.packages("ggplot2")
#install.packages("reshape2")
#install.packages("scales")
#install.packages("gmodels")
#install.packages("DT")
#run every session
library(tidyverse)
library(dplyr)
library(gt)
library(ggplot2)
library(reshape2)
library(scales)
library(gmodels)
library(DT)
#set colors
palette <- c("#a02300", "#0059c7", "#6496b4", "#E1B93C")
#red and gold are accent
#blue is chart
#dark blue is outline
cwns2012 <- read_csv("https://github.com/c-townsley/pbn_a2b_repo/blob/5ef045305f2509d78163213297c4cc4a91f5e254/Data/cwns2012.csv")
cwns2012 <- read_csv("https://raw.githubusercontent.com/c-townsley/pbn_a2b_repo/main/Data/cwns2012.csv?token=GHSAT0AAAAAACAEJN5DRTWOHJRNE36CS67GZAZCUFQ")
cwns2012 <- cwns2012 %>%
mutate(proj_change_res_rec_collctn = PROJ_RES_REC_COLLCTN - PRES_RES_REC_COLLCTN) %>%
mutate(proj_prcntchng_res_rec_collctn = (proj_change_res_rec_collctn / PRES_RES_REC_COLLCTN)*100) %>%
mutate(proj_change_res_rec_trmt = PROJ_RES_REC_TRMT - PRES_RES_REC_TRMT) %>%
mutate(proj_prcntchng_res_rec_trmt = (proj_change_res_rec_trmt / PRES_RES_REC_TRMT)*100) %>%
mutate(proj_chng_n_res_rec_collctn = PROJ_N_RES_REC_COLLCTN - PRES_N_RES_REC_COLLCTN) %>%
mutate(proj_prcntchng_n_res_rec_collctn = (proj_chng_n_res_rec_collctn / PRES_N_RES_REC_COLLCTN)*100) %>%
mutate(proj_chng_n_res_rec_trmt = PROJ_N_RES_REC_TRMT - PRES_N_RES_REC_TRTM) %>%
mutate(proj_prcntchng_n_res_rec_trmt = (proj_chng_n_res_rec_trmt / PRES_N_RES_REC_TRTM)*100) %>%
mutate(res_pop10_dens = (POP10/(ALAND + AWATER))*1e+6) %>%
mutate(res_pop00_dens = (POP00/(ALAND + AWATER))*1e+6) %>%
mutate(res_pop90_dens = (POP90/(ALAND + AWATER))*1e+6) %>%
mutate(res_pop80_dens = (POP80/(ALAND + AWATER))*1e+6) %>%
mutate(res_pop_dens_chng_80_10 = (res_pop10_dens - res_pop80_dens)) %>%
mutate(res_pop_dens_prcnt_chng_80_10 = (res_pop_dens_chng_80_10 / res_pop80_dens)*100) %>%
mutate(medinc_prcnt_chng_69_09 = ((MEDINC09 - MEDINC69)/MEDINC69)*100)
#r clear Nans and Inf values
cwns2012[sapply(cwns2012, is.nan)] <- 0
cwns2012[sapply(cwns2012, is.infinite)] <- 0
#Interactive Summary Table of Resilience Measures by EPA Region
cwns2012 %>%
select(TOTAL_OFFICIAL_NEED, EPA_REGION, proj_change_res_rec_collctn, proj_prcntchng_res_rec_collctn,
proj_change_res_rec_trmt, proj_prcntchng_res_rec_trmt, proj_chng_n_res_rec_collctn,
proj_prcntchng_n_res_rec_collctn, proj_chng_n_res_rec_trmt, proj_prcntchng_n_res_rec_trmt,
res_pop10_dens, res_pop10_dens, res_pop00_dens, res_pop90_dens, res_pop80_dens,
res_pop_dens_chng_80_10, medinc_prcnt_chng_69_09) %>%
DT::datatable(., options = list(scrollX = TRUE))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
rm(list=ls())
#install packages
#only run once
#install.packages("tidyverse")
#install.packages("dplyr")
#install.packages("gt")
#install.packages("ggplot2")
#install.packages("reshape2")
#install.packages("scales")
#install.packages("gmodels")
#install.packages("DT")
#install.packages("corrplot")
#install.packages("Hmisc")
#install.packages("car")
#run every session
library(tidyverse)
library(dplyr)
library(gt)
library(ggplot2)
library(reshape2)
library(scales)
library(gmodels)
library(DT)
library(corrplot)
library(Hmisc)
library(car)
#set colors
palette <- c("#a02300", "#0059c7", "#6496b4", "#E1B93C")
#red and gold are accent
#blue is chart
#dark blue is outline
cwns2012 <- read_csv("https://raw.githubusercontent.com/c-townsley/pbn_a2b_repo/main/Data/cwns2012.csv?token=GHSAT0AAAAAACAEJN5DRTWOHJRNE36CS67GZAZCUFQ")
cwns2012 <- cwns2012 %>%
mutate(proj_change_res_rec_collctn = PROJ_RES_REC_COLLCTN - PRES_RES_REC_COLLCTN) %>%
mutate(proj_prcntchng_res_rec_collctn = (proj_change_res_rec_collctn / PRES_RES_REC_COLLCTN)*100) %>%
mutate(proj_change_res_rec_trmt = PROJ_RES_REC_TRMT - PRES_RES_REC_TRMT) %>%
mutate(proj_prcntchng_res_rec_trmt = (proj_change_res_rec_trmt / PRES_RES_REC_TRMT)*100) %>%
mutate(proj_chng_n_res_rec_collctn = PROJ_N_RES_REC_COLLCTN - PRES_N_RES_REC_COLLCTN) %>%
mutate(proj_prcntchng_n_res_rec_collctn = (proj_chng_n_res_rec_collctn / PRES_N_RES_REC_COLLCTN)*100) %>%
mutate(proj_chng_n_res_rec_trmt = PROJ_N_RES_REC_TRMT - PRES_N_RES_REC_TRTM) %>%
mutate(proj_prcntchng_n_res_rec_trmt = (proj_chng_n_res_rec_trmt / PRES_N_RES_REC_TRTM)*100) %>%
mutate(res_pop10_dens = (POP10/(ALAND + AWATER))*1e+6) %>%
mutate(res_pop00_dens = (POP00/(ALAND + AWATER))*1e+6) %>%
mutate(res_pop90_dens = (POP90/(ALAND + AWATER))*1e+6) %>%
mutate(res_pop80_dens = (POP80/(ALAND + AWATER))*1e+6) %>%
mutate(res_pop_dens_chng_80_10 = (res_pop10_dens - res_pop80_dens)) %>%
mutate(res_pop_dens_prcnt_chng_80_10 = (res_pop_dens_chng_80_10 / res_pop80_dens)*100) %>%
mutate(medinc_prcnt_chng_69_09 = ((MEDINC09 - MEDINC69)/MEDINC69)*100)
#r clear Nans and Inf values
cwns2012[sapply(cwns2012, is.nan)] <- 0
cwns2012[sapply(cwns2012, is.infinite)] <- 0
#Interactive Summary Table of Resilience Measures by EPA Region
cwns2012 %>%
dplyr::select(TOTAL_OFFICIAL_NEED, EPA_REGION, proj_change_res_rec_collctn, proj_prcntchng_res_rec_collctn,
proj_change_res_rec_trmt, proj_prcntchng_res_rec_trmt, proj_chng_n_res_rec_collctn,
proj_prcntchng_n_res_rec_collctn, proj_chng_n_res_rec_trmt, proj_prcntchng_n_res_rec_trmt,
res_pop10_dens, res_pop10_dens, res_pop00_dens, res_pop90_dens, res_pop80_dens,
res_pop_dens_chng_80_10, medinc_prcnt_chng_69_09) %>%
DT::datatable(., options = list(scrollX = TRUE))
summary(cwns2012$proj_change_res_rec_collctn)
summary(cwns2012$proj_prcntchng_res_rec_collctn)
summary(cwns2012$proj_change_res_rec_trmt)
summary(cwns2012$proj_prcntchng_res_rec_trmt)
summary(cwns2012$proj_chng_n_res_rec_collctn)
summary(cwns2012$proj_prcntchng_n_res_rec_collctn)
summary(cwns2012$proj_chng_n_res_rec_trmt)
summary(cwns2012$proj_prcntchng_n_res_rec_trmt)
summary(cwns2012$res_pop10_dens)
summary(cwns2012$res_pop_dens_chng_80_10)
summary(cwns2012$res_pop_dens_prcnt_chng_80_10)
summary(cwns2012$medinc_prcnt_chng_69_09)
#Create a new dataframe with the top ten facilities by need
need_top10 <- cwns2012 %>%
arrange(desc(TOTAL_OFFICIAL_NEED)) %>%
filter(TOTAL_OFFICIAL_NEED != 0) %>%
slice(1:10)
#Create a table with the top ten facilities by need and geography
need_top10 %>%
dplyr::select(TOTAL_OFFICIAL_NEED, FACILITY_CITY, COUNTYNAME, STATE, EPA_REGION) %>%
gt() %>%
tab_header(title = "Top Ten Facilities by Need") %>%
fmt_currency(columns = c(TOTAL_OFFICIAL_NEED), currency = "USD")
#Create a new dataframe with the bottom ten facilities by need
need_bot10 <- cwns2012 %>%
arrange(TOTAL_OFFICIAL_NEED) %>%
filter(TOTAL_OFFICIAL_NEED != 0) %>%
slice(1:10)
#Create a table with the bottom ten facilities by need and geography
need_bot10 %>%
dplyr::select(TOTAL_OFFICIAL_NEED, FACILITY_CITY, COUNTYNAME, STATE, EPA_REGION) %>%
gt() %>%
tab_header(title = "Bottom Ten Facilities by Need") %>%
fmt_currency(columns = c(TOTAL_OFFICIAL_NEED), currency = "USD")
total_need_mean <- mean(cwns2012$TOTAL_OFFICIAL_NEED)
total_need_mean
philly_facilities <- cwns2012 %>%
filter(STATE == "PA", FACILITY_CITY == "PHILADELPHIA")
need_philly_mean <- mean(philly_facilities$TOTAL_OFFICIAL_NEED)
need_philly_mean
need_philly_total <- sum(philly_facilities$TOTAL_OFFICIAL_NEED)
need_philly_total
need_philly_mean - total_need_mean
density_philly_mean <- mean(philly_facilities$res_pop10_dens)
medincome_philly_mean <- mean(philly_facilities$MEDINC09)
print('Mean Philadelphia Density')
density_philly_mean
print('Mean Philadelphia Median Income')
medincome_philly_mean
cwns2012 <- cwns2012 %>%
mutate(log_TOTAL_NEED = ifelse(TOTAL_OFFICIAL_NEED > 0, log(TOTAL_OFFICIAL_NEED), TOTAL_OFFICIAL_NEED))
ggplot(cwns2012, aes(x=log_TOTAL_NEED)) +
geom_histogram(color="#0059c7", size=.1, fill="#6496b4", binwidth=.5, alpha=0.8) +
geom_vline(aes(xintercept=mean(log_TOTAL_NEED)), color="#E1B93C") +
geom_vline(aes(xintercept=mean(log(philly_facilities$TOTAL_OFFICIAL_NEED))), color="#a02300") +
theme_linedraw()
cwns2012%>%
ggplot(aes(x=MEANINC09)) +
ggtitle("Median Income Distribution") +
xlab("Distribution of Median Income (2009)") + ylab("Median Income") +
geom_density(fill="#6496b4", size=.35, color="#0059c7", alpha=0.8) +
geom_vline(aes(xintercept=mean(MEANINC09)), color="#E1B93C") +
geom_vline(aes(xintercept=mean(philly_facilities$MEANINC09)), color="#a02300") +
theme_linedraw()
#Summarize total need and group by EPA region
mean_density_need_epa <- cwns2012 %>%
group_by(EPA_REGION) %>%
summarise(count = n(), mean_popdens = mean(res_pop10_dens), mean_need = mean(TOTAL_OFFICIAL_NEED))
ggplot(mean_density_need_epa, aes(x = mean_popdens, y = mean_need)) +
geom_smooth(method=lm, color="#0059c7") +
geom_point(size=3, color="black", fill="#6496b4", shape=21, alpha=.5) +
ggtitle("Population Density vs. Total Need, by EPA Region") +
geom_text(aes(label = rownames(mean_density_need_epa), hjust = 1.75, vjust = 1)) +
xlab("Mean Population Density (2010)") + ylab("Mean Official Need") +
theme_linedraw()
mean_density_need_epa <- cwns2012 %>%
group_by(EPA_REGION) %>%
summarise(count = n(), mean_popdens = mean(res_pop10_dens), mean_need = mean(TOTAL_OFFICIAL_NEED))
ggplot(mean_density_need_epa, aes(x = mean_popdens, y = mean_need)) +
geom_smooth(method=lm, color="#0059c7") +
geom_point(size=3, color="black", fill="#6496b4", shape=21, alpha=.5) +
ggtitle("Population Density vs. Total Need, by EPA Region") +
geom_text(aes(label = rownames(mean_density_need_epa), hjust = 1.75, vjust = 1)) +
xlab("Mean Population Density (2010)") + ylab("Mean Official Need") +
geom_point(aes(x = density_philly_mean , y = need_philly_mean),size=3, shape=21,color="black", fill="#a02300") +
theme_linedraw()
#Summarize total need in EPA region 3
mean_density_need_R3 <- cwns2012 %>%
filter(EPA_REGION == '3') %>%
group_by(FACILITY_CITY) %>%
summarise(count = n(), mean_popdens = mean(res_pop10_dens), mean_need = mean(TOTAL_OFFICIAL_NEED))
ggplot(mean_density_need_R3, aes(x = mean_popdens, y = mean_need)) +
geom_point(size=3, color="black", fill="#6496b4", shape=21, alpha=.5) +
ggtitle("Population Density vs. Total Need by City in EPA Region 3") +
xlab("Mean Population Density (2010)") + ylab("Mean Official Need") +
geom_point(aes(x = density_philly_mean , y = need_philly_mean),size=3, shape=21,color="black", fill="#a02300") +
theme_linedraw()
#Summarize total need in EPA region 3
mean_income_need_R3 <- cwns2012 %>%
filter(EPA_REGION == '3') %>%
group_by(FACILITY_CITY) %>%
summarise(count = n(), mean_medinc = mean(MEDINC09), mean_need = mean(TOTAL_OFFICIAL_NEED))
ggplot(mean_income_need_R3, aes(x = mean_medinc, y = mean_need)) +
geom_point(size=3, color="black", fill="#6496b4", shape=21, alpha=.5) +
ggtitle("Median Income vs. Total Need by City in EPA Region 3") +
xlab("Median Income (2009)") + ylab("Mean Official Need") +
geom_point(aes(x = medincome_philly_mean , y = need_philly_mean),size=3, shape=21,color="black", fill="#a02300") +
theme_linedraw()
cwns2012_css <- filter(cwns2012, CSS == 1)
summary(cwns2012_css$TOTAL_OFFICIAL_NEED)
cwns2012_ms4 <- filter(cwns2012, MS4 == 1)
summary(cwns2012_ms4$TOTAL_OFFICIAL_NEED)
t.test(TOTAL_OFFICIAL_NEED ~ CSS, data = cwns2012, paired = FALSE)
cwns_yestmdl <- filter(cwns2012, TMDL_INDICATOR == "Y")
summary(cwns_yestmdl$TOTAL_OFFICIAL_NEED)
cwns_notmdl <- filter(cwns2012, TMDL_INDICATOR == "N")
summary(cwns_notmdl$TOTAL_OFFICIAL_NEED)
t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = cwns2012, paired = FALSE)
t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 2), paired = FALSE)
t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 3), paired = FALSE)
t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 5), paired = FALSE)
t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 6), paired = FALSE)
t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 1), paired = FALSE)
t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 4), paired = FALSE)
t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 9), paired = FALSE)
t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 10), paired = FALSE)
# t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 7), paired = FALSE)
# t.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = filter(cwns2012, EPA_REGION == 8), paired = FALSE)
#First create a new column that breaks total official need into six classes
cwns_int <- cwns2012 %>%
mutate(need_int = ntile(cwns2012$TOTAL_OFFICIAL_NEED, 5)) %>%
dplyr::select(need_int, TOTAL_OFFICIAL_NEED)
CrossTable(cwns2012$EPA_REGION, cwns_int$need_int,  fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
#First create a new column that breaks res_pop10_dens into distinct classes
#1 is low and 5 is high
cwns_int <- cwns_int %>%
mutate(res_pop10_dens = ntile(cwns2012$res_pop10_dens, 5))
#cross tab of res_pop10_dens and need
CrossTable(cwns_int$need_int, cwns_int$res_pop10_dens,  fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
#First create a new column that breaks res_pop10_dens into six classes
cwns_int <- cwns_int %>%
mutate(res_pop_dens_chng_80_10 = ntile(cwns2012$res_pop_dens_chng_80_10, 5))
#cross tab of res_pop10_dens and need
CrossTable(cwns_int$need_int, cwns_int$res_pop_dens_chng_80_10,  fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
#First create a new column that breaks res_pop10_dens into six classes
cwns_int <- cwns_int %>%
mutate(POP10 = ntile(cwns2012$POP10, 5))
#cross tab of res_pop10_dens and need
CrossTable(cwns_int$need_int, cwns_int$POP10,  fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
#First create a new column that breaks res_pop10_dens into six classes
cwns_int <- cwns_int %>%
mutate(proj_change_res_rec_trmt = ntile(cwns2012$proj_change_res_rec_trmt, 5))
#cross tab of res_pop10_dens and need
CrossTable(cwns_int$need_int, cwns_int$proj_change_res_rec_trmt,  fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
#First create a new column that breaks the variable into six classes
cwns_int <- cwns_int %>%
mutate(proj_change_res_rec_collctn = ntile(cwns2012$proj_change_res_rec_collctn, 5))
#cross tab of var5 and need
CrossTable(cwns_int$need_int, cwns_int$proj_change_res_rec_collctn,  fisher = FALSE, chisq = TRUE,
expected = TRUE, sresid = FALSE, format="SPSS")
#cor(cwns2012$medinc_prcnt_chng_69_09, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
#cor(cwns2012$res_pop_dens_prcnt_chng_80_10, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
#cor(cwns2012$proj_prcntchng_res_rec_trmt, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
#cor(cwns2012$proj_prcntchng_res_rec_collctn, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
#cor(cwns2012$proj_prcntchng_n_res_rec_trmt, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
#cor(cwns2012$proj_prcntchng_n_res_rec_collctn, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
#cor(cwns2012$MEDINC09, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
cor(cwns2012$MEDINC09, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
cor(cwns2012$proj_chng_n_res_rec_trmt, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
cor(cwns2012$proj_chng_n_res_rec_collctn, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
cor(cwns2012$POP10, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
cor(cwns2012$proj_change_res_rec_collctn, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
cor(cwns2012$proj_change_res_rec_trmt, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
cor(cwns2012$res_pop_dens_chng_80_10, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
cor(cwns2012$res_pop10_dens, cwns2012$TOTAL_OFFICIAL_NEED, use="complete.obs", method="pearson")
ggplot(cwns2012, aes(x=log(res_pop_dens_chng_80_10), y=log(TOTAL_OFFICIAL_NEED))) +
ggtitle("Residential Population Density Change by Official Need") +
xlab("Log-Adjusted Residential Population Density Change (1980 - 2010)") + ylab("Log-Adjusted Official Need") +
geom_point(size=1, color="black", fill="#6496b4", shape=21, alpha=.5) +
geom_smooth(method=lm, color="#0059c7") +
theme_linedraw()
ggplot(cwns2012, aes(x=log(proj_change_res_rec_trmt), y=log(TOTAL_OFFICIAL_NEED))) +
ggtitle("Projected Change in Res. Population Receiving Treatment by Official Need") +
xlab("Log-Adjusted Projected Change in Residential Population Receiving Treatment") + ylab("Log-Adjusted Official Need") +
geom_point(size=1, color="black", fill="#6496b4", shape=21, alpha=.5)+
geom_smooth(method=lm, color="#0059c7") +
theme_linedraw()
ggplot(cwns2012, aes(x=log(proj_change_res_rec_collctn), y=log(TOTAL_OFFICIAL_NEED))) +
ggtitle("Projected Change in Res. Population Receiving Collection by Official Need") +
xlab("Log-Adjusted Projected Change in Residential Population Receiving Collection") + ylab("Log-Adjusted Official Need") +
geom_point(size=1, color="black", fill="#6496b4", shape=21, alpha=.5)+
geom_smooth(method=lm, color="#0059c7") +
theme_linedraw()
ggplot(cwns2012, aes(x=log(proj_chng_n_res_rec_trmt), y=log(TOTAL_OFFICIAL_NEED))) +
ggtitle("Projected Change in Non-Res. Population Receiving Treatment by Official Need") +
xlab("Log-Adjusted Projected Change in Non-Residential Population Receiving Treatment") + ylab("Log-Adjusted Official Need") +
geom_point(size=1, color="black", fill="#6496b4", shape=21, alpha=.5)+
geom_smooth(method=lm, color="#0059c7") +
theme_linedraw()
ggplot(cwns2012, aes(x=log(proj_chng_n_res_rec_collctn), y=log(TOTAL_OFFICIAL_NEED))) +
ggtitle("Projected Change in Non-Res. Population Receiving Collection by Official Need") +
xlab("Log-Adjusted Projected Change in Non-Residential Population Receiving Collection") + ylab("Log-Adjusted Official Need") +
geom_point(size=1, color="black", fill="#6496b4", shape=21, alpha=.5)+
geom_smooth(method=lm, color="#0059c7") +
theme_linedraw()
ggplot(cwns2012, aes(x=log(res_pop10_dens), y=log(TOTAL_OFFICIAL_NEED))) +
ggtitle("Residential Population Density (2010) by Official Need") +
xlab("Log-Adjusted Residential Population Density in 2010") + ylab("Log-Adjusted Official Need") +
geom_point(size=1, color="black", fill="#6496b4", shape=21, alpha=.5)+
geom_smooth(method=lm, color="#0059c7") +
theme_linedraw()
ggplot(cwns2012, aes(x=log(POP10), y=log(TOTAL_OFFICIAL_NEED))) +
ggtitle("Residential Population (2010) by Official Need") +
xlab("Log-Adjusted Residential Population (2010)") + ylab("Log-Adjusted Official Need") +
geom_point(size=1, color="black", fill="#6496b4", shape=21, alpha=.5)+
geom_smooth(method=lm, color="#0059c7") +
theme_linedraw()
ggplot(cwns2012, aes(x=log(POP10), y=log(TOTAL_OFFICIAL_NEED))) +
ggtitle("Median Income (2009) by Official Need") +
xlab("Log-Adjusted Median Income (2009)") + ylab("Log-Adjusted Official Need") +
geom_point(size=1, color="black", fill="#6496b4", shape=21, alpha=.5)+
geom_smooth(method=lm, color="#0059c7") +
theme_linedraw()
cwns2012 <- cwns2012 %>%
mutate(ResBurden = TOTAL_OFFICIAL_NEED/max(PROJ_RES_REC_COLLCTN, PROJ_RES_REC_TRMT))
cwns2012%>%
ggplot(aes(x=ResBurden)) +
ggtitle("Projected Residential Burden") +
xlab("Distribution") + ylab("Need/Residences Receiving Services") +
geom_density(fill="#6496b4", size=.35, color="#0059c7", alpha=0.8) +
theme_linedraw()
cwns2012 <- cwns2012 %>%
mutate(LogResBurden = ifelse(ResBurden > 0, log(ResBurden), 0))
cwns2012%>%
ggplot(aes(x=LogResBurden)) +
ggtitle("Projected Log Adjusted Residential Burden") +
xlab("Distribution") + ylab("Log Adjusted Residential Burden") +
geom_density(fill="#6496b4", size=.35, color="#0059c7", alpha=0.8) +
theme_linedraw()
cwns2012 <- cwns2012 %>%
mutate(LogOfficialNeed = ifelse(TOTAL_OFFICIAL_NEED > 0, log(TOTAL_OFFICIAL_NEED), 0))
cwns2012%>%
ggplot(aes(x=LogOfficialNeed)) +
ggtitle("Log Adjusted Total Official Need") +
xlab("Distribution") + ylab("Log Adjusted Total Official Need") +
geom_density(fill="#6496b4", size=.35, color="#0059c7", alpha=0.8) +
theme_linedraw()
cwns2012 <- cwns2012 %>%
mutate(GrowingCity = ifelse(POP10-POP80) > 0, log(TOTAL_OFFICIAL_NEED), 0) %>%   #OLIVER
mutate(DensifyingCity= )
#make matrix of variables we're testing
mod_vars <- cwns2012 %>%
dplyr::select(TOTAL_OFFICIAL_NEED, LogOfficialNeed, res_pop10_dens, res_pop_dens_chng_80_10,
proj_change_res_rec_trmt, proj_change_res_rec_collctn, POP10, MEDINC09,
ResBurden, LogResBurden, CSS)
#compute correlation matrix
cormatrix <- cor(mod_vars) %>%
round(., 2)
#plot a correlogram
corrplot(cormatrix, method = "circle", type = "lower", order = "hclust",
tl.col = "black", tl.srt = 45)
bimod1 <- lm(TOTAL_OFFICIAL_NEED ~ res_pop10_dens, data = cwns2012)
summary(bimod1)
bimod2 <- lm(TOTAL_OFFICIAL_NEED ~ proj_change_res_rec_trmt, data = cwns2012)
summary(bimod2)
bimod3 <- lm(TOTAL_OFFICIAL_NEED ~ POP10, data = cwns2012)
summary(bimod3)
bimod4 <- lm(TOTAL_OFFICIAL_NEED ~ MEDINC09, data = cwns2012)
summary(bimod4)
bimod5 <- lm(TOTAL_OFFICIAL_NEED ~ LogResBurden, data = cwns2012)
summary(bimod5)
bimod6 <- lm(TOTAL_OFFICIAL_NEED ~ CSS, data = cwns2012)
summary(bimod6)
#Interpreting regression results - key statistics:
#R-squared
# Tells what % of the variability in the dependent variable is explained by the model
# in other words - r-squared measures the strength of the relationship btwn the model
# and dependent variable on a 0-100% scale
# so, higher r-squared values represent smaller differences btwn the observed data
# and the fitted values.
# r-squared < 50% is common when studying human behavior
# IMPORTANT NOTE: r-squared increases every time you add an independent variable to the model.
#Adjusted R-squared
# Adjusts for the number of terms in the model!
# Its value increases only when the new term improves the model fit more than expected by chance alone.
# The adjusted R-squared value actually decreases when the term doesn’t improve the model fit enough.
# Useful for comparing goodness-of-fit for regression models with differing numbers of independent variables.
#Multiple R-squared
#Significance codes
#F-statistic
# a large f-stat means the model has a strong fit and we can reject the
# null hypothesis that a null model (just the intercept) describes the data better.
# If the p-value associated with the F-stat is ≥ 0.05 Then there is no relationship between ANY of the
# independent variables and Y.
# If the p-value associated with the F-statistic < 0.05 then AT LEAST 1 independent variable is related to Y.
#AIC - oliver to fill out
# Particularly helpful for backwards selection
mod1 <- lm (TOTAL_OFFICIAL_NEED ~ POP10*res_pop10_dens + MEDINC09 + MEDINC09*POP10 + proj_change_res_rec_trmt + LogResBurden + CSS, data = cwns2012)
summary(mod1)
#variance inflation factor (VIF)
# Index of how a coefficient variance increases due to colinearity.
# VIF calculates how correlated the variable is with all the other variables in the model.
# Mechanics: Regress X1 on X2, calculate r2 of this relationship
# Calculate the VIF for X1 as follows:  1/(1 - r2)
# some people say if VIF>5-10 then you have a problem,
# others are more conservative and say if sqrt(vif)>2 then you have a problem
vif(mod1) # variance inflation factors
sqrt(vif(mod1))
#variance inflation factor (VIF)
# Index of how a coefficient variance increases due to colinearity.
# VIF calculates how correlated the variable is with all the other variables in the model.
# Mechanics: Regress X1 on X2, calculate r2 of this relationship
# Calculate the VIF for X1 as follows:  1/(1 - r2)
# some people say if VIF>5-10 then you have a problem,
# others are more conservative and say if sqrt(vif)>2 then you have a problem
vif(mod1) # variance inflation factors
sqrt(vif(mod1))
mod1<-lm (TOTAL_OFFICIAL_NEED ~ POP10:res_pop10_dens + MEDINC09 + MEDINC09:POP10 + proj_change_res_rec_trmt + LogResBurden + CSS, data = cwns2012)
summary(mod1)
mod2 <- lm (TOTAL_OFFICIAL_NEED ~ POP10:res_pop10_dens + MEDINC09 + MEDINC09:POP10 + proj_change_res_rec_trmt + LogResBurden + CSS, data = cwns2012)
summary(mod2)
mod2 <- lm (TOTAL_OFFICIAL_NEED ~ POP10:res_pop10_dens + MEDINC09:POP10 + proj_change_res_rec_trmt + LogResBurden + CSS, data = cwns2012)
summary(mod2)
vif(mod2) # variance inflation factors
sqrt(vif(mod2))
#make matrix of variables we're testing
mod_vars <- cwns2012 %>%
dplyr::select(TOTAL_OFFICIAL_NEED, LogOfficialNeed, res_pop10_dens, res_pop_dens_chng_80_10,
proj_change_res_rec_trmt, proj_change_res_rec_collctn, POP10, MEDINC09,
ResBurden, LogResBurden, CSS)
#compute correlation matrix
cormatrix <- cor(mod_vars) %>%
round(., 2)
#plot a correlogram
corrplot(cormatrix, method = "circle", type = "lower", order = "hclust",
tl.col = "black", tl.srt = 45)
?ifelse
cwns2012 <- cwns2012 %>%
mutate(GrowingCity = ifelse(POP10-POP80 > 0, 1, 0)
cwns2012 <- cwns2012 %>%
cwns2012 <- cwns2012 %>%
mutate(GrowingCity = ifelse(POP10-POP80 > 0, 1, 0) %>%
mutate(DensifyingCity= ifelse(res_pop10_dens-res_pop80_dens > 0, 1, 0)
cwns2012 <- cwns2012 %>%
glimpse(cwns2012)
